# Docker File ve Image Nasıl Oluşturulur?
**Docker imajı oluşturmak istersek öncelikle Dockerfile adında bir dosya oluşturmamız gerekir**

##Dockerfile oluşturmak için kullanılabilecek parametreler;


#### FROM: 
**Oluşturulacak imajın hangi imajdan oluşturulacağını belirten talimat. Dockerfile içerisinde geçmesi mecburi tek talimat budur. Mutlaka olmalıdır.**

**Ör: FROM ubuntu:18.04**

#### RUN
**İmaj oluşturulurken shell’de bir komut çalıştırmak istersek bu talimat kullanılır. Örneğin apt-get install xxx ile xxx isimli uygulamanın bu imaja yüklenmesi sağlanabilir.**

**Ör: RUN apt-get updat**

#### LABEL
**İmaj metadata’sına key=value şeklinde değer çiftleri eklemek için kullanılır. Örneğin team=development şeklinde bir etiket eklenerek bu imajın development ekibinin kullanması için yaratıldığı belirtilebilir.**


#### COPY: 
**Belirtilen dosyaları image içerisinde belirlenen hedefe kopyalar.**

**Ör: COPY /source /user/src/app**

#### WORKDIR
**cd xxx komutuyla ile istediğimiz klasöre geçmek yerine bu talimat kullanılarak istediğimiz klasöre geçer ve oradan çalışmaya devam ederiz.**

**Ör: WORKDIR /usr/src/app**

###  EXPOSE
**Bu imajdan oluşturulacak containerların hangi portlar üstünden erişilebileceğini yani hangi portların yayınlanacağını bu talimatla belirtirsiniz.**

**Ör: EXPOSE 80/tcp**

### CMD 
**İlk önce çağrılır. Çalışma sırasını düzenler. İçine yazılan komut ve parametreleri çalıştırır.**

**Ör: CMD java merhaba**

#### ENV
 
**Image içerisine dışarıdan veri girileceği zaman kullanılır.**

**Ör: ENV TEMP_FOLDER="/temp"**

## Dockerfile Image oluşturma

 **1.Docker file oluşturulalım.**

  ```
     
     FROM nginx
     ENV AUTHOR=DockerEnv
     WORKDIR /usr/share/nginx/html
     COPY Color_docker.html /usr/share/nginx/html
     CMD cd /usr/share/nginx/html && sed -e s/DockerEnv/"$AUTHOR"/ Color_docker.html > 
     index.html ; nginx -g 'daemon off;'

 ```
    

   **2. Background değişikliği yapabileceğimiz bir html dosyası hazırlayalım.**

             <html>
             <head><style>
              body {background-color: DockerEnv;}
              </style></head>
              <body></body>
              </html>


   **3. Klasör içinde terminal açıp, build komutunu girerek image dosyasını oluşturalım.**
   


      $ Docker build -t myimage .
 
  

  **4. Docker image, run komutu kullanılarak container haline getirilir.**
 

     ```
        $ Docker run -d -p 8880:80 -e AUTHOR=”blue” myimage
